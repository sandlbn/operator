apiVersion: confidentialcontainers.org/v1beta1
kind: CcRuntime
metadata:
  name: ccruntime-rke2
spec:
  runtimeName: kata
  ccNodeSelector:
    matchLabels:
      node-role.kubernetes.io/worker: ""
  config:
    installType: bundle
    payloadImage: quay.io/kata-containers/kata-deploy:stable
    installDoneLabel:
      katacontainers.io/kata-runtime: "true"
    uninstallDoneLabel:
      katacontainers.io/kata-runtime: "cleanup"
    installerVolumeMounts:
      # Remove CRI-O since RKE2 uses containerd
      # Use RKE2-specific containerd path
      - mountPath: /var/lib/rancher/rke2/agent/etc/containerd/
        name: rke2-containerd-conf
      - mountPath: /usr/local/bin/
        name: local-bin
      - mountPath: /host/
        name: host
      # Add RKE2-specific mount points
      - mountPath: /var/lib/rancher/rke2/
        name: rke2-root
      - mountPath: /run/k3s/containerd/
        name: containerd-socket
    installerVolumes:
      # Remove CRI-O since RKE2 uses containerd
      # Use RKE2-specific containerd path
      - hostPath:
          path: /var/lib/rancher/rke2/agent/etc/containerd/
          type: ""
        name: rke2-containerd-conf
      - hostPath:
          path: /usr/local/bin/
          type: ""
        name: local-bin
      - hostPath:
          path: /
          type: ""
        name: host
      # Add RKE2-specific volumes
      - hostPath:
          path: /var/lib/rancher/rke2/
          type: ""
        name: rke2-root
      - hostPath:
          path: /run/k3s/containerd/
          type: ""
        name: containerd-socket
    installCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "install"]
    uninstallCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "cleanup"]
    cleanupCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "reset"]
    # Explicitly define runtime classes
    runtimeClasses: 
      - name: "kata"
        snapshotter: ""
        pulltype: ""
      - name: "kata-clh"
        snapshotter: ""
        pulltype: ""
      - name: "kata-qemu"
        snapshotter: ""
        pulltype: ""
    # Remove Nydus mounts from postUninstall
    postUninstall:
      image: quay.io/confidential-containers/reqs-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        # Update containerd path for RKE2
        - mountPath: /var/lib/rancher/rke2/agent/etc/containerd/
          name: rke2-containerd-conf
        - mountPath: /usr/local/bin/
          name: local-bin
        # Add RKE2-specific mounts
        - mountPath: /var/lib/rancher/rke2/
          name: rke2-root
        - mountPath: /run/k3s/containerd/
          name: containerd-socket
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        # Update containerd path for RKE2
        - hostPath:
            path: /var/lib/rancher/rke2/agent/etc/containerd/
            type: ""
          name: rke2-containerd-conf
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        # Add RKE2-specific volumes
        - hostPath:
            path: /var/lib/rancher/rke2/
            type: ""
          name: rke2-root
        - hostPath:
            path: /run/k3s/containerd/
            type: ""
          name: containerd-socket
    # Remove Nydus mounts from preInstall
    preInstall:
      image: quay.io/confidential-containers/reqs-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        # Update containerd path for RKE2
        - mountPath: /var/lib/rancher/rke2/agent/etc/containerd/
          name: rke2-containerd-conf
        - mountPath: /usr/local/bin/
          name: local-bin
        # Add RKE2-specific mounts
        - mountPath: /var/lib/rancher/rke2/
          name: rke2-root
        - mountPath: /run/k3s/containerd/
          name: containerd-socket
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        # Update containerd path for RKE2
        - hostPath:
            path: /var/lib/rancher/rke2/agent/etc/containerd/
            type: ""
          name: rke2-containerd-conf
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        # Add RKE2-specific volumes
        - hostPath:
            path: /var/lib/rancher/rke2/
            type: ""
          name: rke2-root
        - hostPath:
            path: /run/k3s/containerd/
            type: ""
          name: containerd-socket
    environmentVariables:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: "CONFIGURE_CC"
        value: "yes"
      - name: "DEBUG"
        value: "true"  # Enable debug mode for better visibility
      # Disable all containerd installations since RKE2 manages its own
      - name: "INSTALL_COCO_CONTAINERD"
        value: "false"
      - name: "INSTALL_OFFICIAL_CONTAINERD"
        value: "false"  # Changed to false since RKE2 has its own containerd
      - name: "INSTALL_VFIO_GPU_CONTAINERD" 
        value: "false"
      # Explicitly disable Nydus snapshotter
      - name: "INSTALL_NYDUS_SNAPSHOTTER"
        value: "false"
      # Add RKE2-specific environment variables
      - name: "CONTAINERD_CONFIG_PATH"
        value: "/var/lib/rancher/rke2/agent/etc/containerd/config.toml.d"
      - name: "CONTAINERD_SOCKET_PATH"
        value: "/run/k3s/containerd/containerd.sock"
      - name: "SKIP_SYSTEMD_OPERATIONS"
        value: "true"
      - name: "IS_RKE2_NODE"
        value: "true"